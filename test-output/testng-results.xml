<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" total="4" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="52527" started-at="2019-11-22T07:06:05Z" finished-at="2019-11-22T07:06:58Z">
    <groups>
      <group name="smoke">
        <method signature="TC1.step1(java.lang.reflect.Method)[pri:0, instance:TestCases.TC1@7e0babb1]" name="step1" class="TestCases.TC1"/>
        <method signature="TC2.step1(java.lang.reflect.Method)[pri:0, instance:TestCases.TC2@3f0ee7cb]" name="step1" class="TestCases.TC2"/>
        <method signature="TC1.step1(java.lang.reflect.Method)[pri:0, instance:TestCases.TC1@43a25848]" name="step1" class="TestCases.TC1"/>
        <method signature="TC2.step1(java.lang.reflect.Method)[pri:0, instance:TestCases.TC2@3ac3fd8b]" name="step1" class="TestCases.TC2"/>
      </group> <!-- smoke -->
    </groups>
    <test name="CHTest" duration-ms="43313" started-at="2019-11-22T07:06:05Z" finished-at="2019-11-22T07:06:48Z">
      <class name="TestCases.TC2">
        <test-method status="PASS" signature="beforeClass(org.testng.ITestContext)[pri:0, instance:TestCases.TC2@3f0ee7cb]" name="beforeClass" is-config="true" duration-ms="1" started-at="2019-11-22T12:36:29Z" finished-at="2019-11-22T12:36:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@42d8062c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="setupMetod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:TestCases.TC2@3f0ee7cb]" name="setupMetod" is-config="true" duration-ms="13617" started-at="2019-11-22T12:36:29Z" finished-at="2019-11-22T12:36:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.TC2.step1(java.lang.reflect.Method)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ch]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMetod -->
        <test-method status="FAIL" signature="step1(java.lang.reflect.Method)[pri:0, instance:TestCases.TC2@3f0ee7cb]" name="step1" duration-ms="3" started-at="2019-11-22T12:36:43Z" finished-at="2019-11-22T12:36:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.TC2.step1(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at TestCases.TC2.step1(TC2.java:19)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:822)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1130)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:400)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- step1 -->
        <test-method status="PASS" signature="teardownMetod(org.testng.ITestResult)[pri:0, instance:TestCases.TC2@3f0ee7cb]" name="teardownMetod" is-config="true" duration-ms="5156" started-at="2019-11-22T12:36:43Z" finished-at="2019-11-22T12:36:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=step1 status=FAILURE method=TC2.step1(java.lang.reflect.Method)[pri:0, instance:TestCases.TC2@3f0ee7cb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardownMetod -->
        <test-method status="PASS" signature="flushReport()[pri:0, instance:TestCases.TC2@3f0ee7cb]" name="flushReport" is-config="true" duration-ms="0" started-at="2019-11-22T12:36:48Z" finished-at="2019-11-22T12:36:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReport -->
      </class> <!-- TestCases.TC2 -->
      <class name="TestCases.TC1">
        <test-method status="PASS" signature="beforeClass(org.testng.ITestContext)[pri:0, instance:TestCases.TC1@7e0babb1]" name="beforeClass" is-config="true" duration-ms="8" started-at="2019-11-22T12:36:05Z" finished-at="2019-11-22T12:36:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@42d8062c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="setupMetod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:TestCases.TC1@7e0babb1]" name="setupMetod" is-config="true" duration-ms="20844" started-at="2019-11-22T12:36:05Z" finished-at="2019-11-22T12:36:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.TC1.step1(java.lang.reflect.Method)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ch]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMetod -->
        <test-method status="PASS" signature="step1(java.lang.reflect.Method)[pri:0, instance:TestCases.TC1@7e0babb1]" name="step1" duration-ms="113" started-at="2019-11-22T12:36:26Z" finished-at="2019-11-22T12:36:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.TC1.step1(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- step1 -->
        <test-method status="PASS" signature="teardownMetod(org.testng.ITestResult)[pri:0, instance:TestCases.TC1@7e0babb1]" name="teardownMetod" is-config="true" duration-ms="3022" started-at="2019-11-22T12:36:26Z" finished-at="2019-11-22T12:36:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=step1 status=SUCCESS method=TC1.step1(java.lang.reflect.Method)[pri:0, instance:TestCases.TC1@7e0babb1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardownMetod -->
        <test-method status="PASS" signature="flushReport()[pri:0, instance:TestCases.TC1@7e0babb1]" name="flushReport" is-config="true" duration-ms="0" started-at="2019-11-22T12:36:29Z" finished-at="2019-11-22T12:36:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReport -->
        <test-method status="PASS" signature="teardownTest()[pri:0, instance:TestCases.TC1@7e0babb1]" name="teardownTest" is-config="true" duration-ms="523" started-at="2019-11-22T12:36:48Z" finished-at="2019-11-22T12:36:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardownTest -->
      </class> <!-- TestCases.TC1 -->
    </test> <!-- CHTest -->
    <test name="IETest" duration-ms="52527" started-at="2019-11-22T07:06:05Z" finished-at="2019-11-22T07:06:58Z">
      <class name="TestCases.TC2">
        <test-method status="PASS" signature="beforeClass(org.testng.ITestContext)[pri:0, instance:TestCases.TC2@3ac3fd8b]" name="beforeClass" is-config="true" duration-ms="0" started-at="2019-11-22T12:36:39Z" finished-at="2019-11-22T12:36:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@45820e51]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="setupMetod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:TestCases.TC2@3ac3fd8b]" name="setupMetod" is-config="true" duration-ms="17164" started-at="2019-11-22T12:36:39Z" finished-at="2019-11-22T12:36:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.TC2.step1(java.lang.reflect.Method)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[IE]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMetod -->
        <test-method status="FAIL" signature="step1(java.lang.reflect.Method)[pri:0, instance:TestCases.TC2@3ac3fd8b]" name="step1" duration-ms="1" started-at="2019-11-22T12:36:56Z" finished-at="2019-11-22T12:36:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.TC2.step1(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at TestCases.TC2.step1(TC2.java:19)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:822)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1130)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:400)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- step1 -->
        <test-method status="PASS" signature="teardownMetod(org.testng.ITestResult)[pri:0, instance:TestCases.TC2@3ac3fd8b]" name="teardownMetod" is-config="true" duration-ms="477" started-at="2019-11-22T12:36:56Z" finished-at="2019-11-22T12:36:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=step1 status=FAILURE method=TC2.step1(java.lang.reflect.Method)[pri:0, instance:TestCases.TC2@3ac3fd8b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardownMetod -->
        <test-method status="PASS" signature="flushReport()[pri:0, instance:TestCases.TC2@3ac3fd8b]" name="flushReport" is-config="true" duration-ms="0" started-at="2019-11-22T12:36:57Z" finished-at="2019-11-22T12:36:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReport -->
      </class> <!-- TestCases.TC2 -->
      <class name="TestCases.TC1">
        <test-method status="PASS" signature="extentReportSetup()[pri:0, instance:TestCases.TC1@43a25848]" name="extentReportSetup" is-config="true" duration-ms="509" started-at="2019-11-22T12:36:04Z" finished-at="2019-11-22T12:36:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extentReportSetup -->
        <test-method status="PASS" signature="beforeClass(org.testng.ITestContext)[pri:0, instance:TestCases.TC1@43a25848]" name="beforeClass" is-config="true" duration-ms="8" started-at="2019-11-22T12:36:05Z" finished-at="2019-11-22T12:36:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@45820e51]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="setupMetod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:TestCases.TC1@43a25848]" name="setupMetod" is-config="true" duration-ms="33822" started-at="2019-11-22T12:36:05Z" finished-at="2019-11-22T12:36:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.TC1.step1(java.lang.reflect.Method)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[IE]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMetod -->
        <test-method status="PASS" signature="step1(java.lang.reflect.Method)[pri:0, instance:TestCases.TC1@43a25848]" name="step1" duration-ms="29" started-at="2019-11-22T12:36:39Z" finished-at="2019-11-22T12:36:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.TC1.step1(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- step1 -->
        <test-method status="PASS" signature="teardownMetod(org.testng.ITestResult)[pri:0, instance:TestCases.TC1@43a25848]" name="teardownMetod" is-config="true" duration-ms="473" started-at="2019-11-22T12:36:39Z" finished-at="2019-11-22T12:36:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=step1 status=SUCCESS method=TC1.step1(java.lang.reflect.Method)[pri:0, instance:TestCases.TC1@43a25848] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardownMetod -->
        <test-method status="PASS" signature="flushReport()[pri:0, instance:TestCases.TC1@43a25848]" name="flushReport" is-config="true" duration-ms="1" started-at="2019-11-22T12:36:39Z" finished-at="2019-11-22T12:36:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReport -->
        <test-method status="PASS" signature="teardownTest()[pri:0, instance:TestCases.TC1@43a25848]" name="teardownTest" is-config="true" duration-ms="530" started-at="2019-11-22T12:36:57Z" finished-at="2019-11-22T12:36:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardownTest -->
      </class> <!-- TestCases.TC1 -->
    </test> <!-- IETest -->
  </suite> <!-- Suite -->
</testng-results>
